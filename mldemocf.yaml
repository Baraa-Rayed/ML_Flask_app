Parameters:
  LatestAmiId:
    Type: 'AWS::SSM::Parameter::Value<AWS::EC2::Image::Id>'
    Default: '/aws/service/ami-amazon-linux-latest/al2023-ami-kernel-default-x86_64'

  SSHandWebLocation:
    Description: The IP address range that can be used to SSH to the EC2 instances
    Type: String
    MinLength: '9'
    MaxLength: '18'
    Default: 0.0.0.0/0
    AllowedPattern: '(\d{1,3})\.(\d{1,3})\.(\d{1,3})\.(\d{1,3})/(\d{1,2})'
    ConstraintDescription: >
      Must be a valid IP CIDR range of the form x.x.x.x/x.
      Default is 0.0.0.0/0 and is less safe.

Resources:
  EC2Instance:
    Type: AWS::EC2::Instance
    Properties:
      InstanceType: "t2.micro"
      ImageId: !Ref LatestAmiId
      IamInstanceProfile: !Ref SessionManagerInstanceProfile
      SecurityGroups:
        - !Ref InstanceSecurityGroup
      Tags:
        - Key: Name
          Value: Salarypred-EC2
      UserData: !Base64
        Fn::Sub: |
          #!/bin/bash -xe
          # Update yum
          yum update -y
          cd /home/ec2-user
          # Install git
          yum install -y git
          # Clone the repository
          git clone https://<Your User Namer>:<github Token>@github.com/<Your User Namer>/ML_Flask_app.git
          # Install Python 3 and pip
          yum install -y python3-pip
          # Change directory to MLDemo
          cd ML_Flask_app
          # Create Python virtual environment
          python3 -m venv env
          # Activate the virtual environment
          source env/bin/activate
          # Install Python dependencies
          python3 -m pip install -r requirements.txt
          # Define the contents of the ML_Flask_app.service file
          SERVICE_CONTENTS="[Unit]\nDescription=Gunicorn instance for a simple ML_Flask_app app\nAfter=network.target\n[Service]\nUser=ec2-user\nGroup=ec2-user\nWorkingDirectory=/home/ec2-user/ML_Flask_app\nExecStart=/home/ec2-user/ML_Flask_app/env/bin/gunicorn -b localhost:8000 app:app\nRestart=always\n[Install]\nWantedBy=multi-user.target"
          # Create the ML_Flask_app.service file
          echo -e "$SERVICE_CONTENTS" > /etc/systemd/system/ML_Flask_app.service
          # Reload systemd configuration
          systemctl daemon-reload
          # Enable and start the ML_Flask_app service
          systemctl enable ML_Flask_app
          systemctl start ML_Flask_app
          # Install nginx
          yum install -y nginx
          # Start and enable Nginx
          systemctl start nginx
          systemctl enable nginx
          
  InstanceSecurityGroup:
    Type: 'AWS::EC2::SecurityGroup'
    Properties:
      GroupDescription: Enable SSH access via port 22 and 80
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: '22'
          ToPort: '22'
          CidrIp: !Ref SSHandWebLocation
        - IpProtocol: tcp
          FromPort: '80'
          ToPort: '80'
          CidrIp: !Ref SSHandWebLocation

  SessionManagerRole:
    Type: 'AWS::IAM::Role'
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service:
              - ec2.amazonaws.com
            Action:
              - 'sts:AssumeRole'
      Path: /
      ManagedPolicyArns:
        - "arn:aws:iam::aws:policy/AmazonSSMManagedInstanceCore"

  SessionManagerInstanceProfile:
    Type: 'AWS::IAM::InstanceProfile'
    Properties:
      Path: /
      Roles:
        - !Ref SessionManagerRole

Outputs:
  InstanceId:
    Description: InstanceId of the newly created EC2 instance
    Value: !Ref EC2Instance

  AZ:
    Description: Availability Zone of the newly created EC2 instance
    Value: !GetAtt 
      - EC2Instance
      - AvailabilityZone

  PublicDNS:
    Description: Public DNSName of the newly created EC2 instance
    Value: !GetAtt 
      - EC2Instance
      - PublicDnsName

  PublicIP:
    Description: Public IP address of the newly created EC2 instance
    Value: !GetAtt 
      - EC2Instance
      - PublicIp 

